@model eStore.Models.SysMenuViewModel


@{
    ViewBag.Title = "Regjistrimi i menuve";
    ViewBag.hasReturn = true;
    ViewBag.action = "Index";
    ViewBag.controller = "SYSMENU";
    ViewBag.paramName = null;
}

 
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-6 col-sm-12" id="test">
                <div class="box box-primary">
                    <div class="box-header">
                        Te dhenat per parent
                    </div>
                    <div class="box-body">
                        <div class="form-group" data-step="1" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.PershkrimiP, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.PershkrimiP, new { @class = "form-control" })
                                 </div>
                        </div>

                        <div class="form-group" data-step="2" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.HtmlKlasaP, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.HtmlKlasaP, new { @class = "form-control" })
                              </div>
                        </div>

                        <div class="form-group" data-step="3" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.RoliIDP, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @*@Html.DropDownList("Roles", null, "Zgjedhe", htmlAttributes: new { @class = "form-control select2" })*@
                                @Html.DropDownListFor(model => model.RoliIDP, null, "Zgjedhe", htmlAttributes: new { @class = "form-control select2" })  
                              

                            </div>
                        </div>

                        <div class="form-group" data-step="4" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.RenditjaP, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.RenditjaP, new { @class = "form-control" })
                               </div>
                        </div>

                    </div>
                    <div class="box-footer">
                        <button class="btn btn-primary" onclick="ruajparent();">Ruaj</button>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="box box-primary">
                    <div class="box-header">
                        Te dhenat per metoda
                    </div>
                    <div class="box-body">
                        <div class="form-group" data-step="4" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.Pershkrimi, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Pershkrimi, new { @class = "form-control" })
                             </div>
                        </div>
                        <div class="form-group" data-step="4" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.HtmlClass, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.HtmlClass, new { @class = "form-control" })
                             </div>
                        </div>
                        <div class="form-group" data-step="4" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.Controller, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Controller, new { @class = "form-control" })
                             </div>
                        </div>

                        <div class="form-group" data-step="4" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.ActionName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.ActionName, new { @class = "form-control" })
                             </div>
                        </div>

                        <div class="form-group" data-step="4" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.ParentID, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ParentID, null, "Zgjedhe", htmlAttributes: new { @class = "form-control select2" }) 
                             
                            </div>
                        </div>

                        <div class="form-group" data-step="4" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.RoleID, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.RoleID, null, "Zgjedhe", htmlAttributes: new { @class = "form-control select2" })
                             </div>
                        </div>

                        <div class="form-group" data-step="4" data-intro="MSG" data-position="right" data-scrollTo='tooltip'>
                            @Html.LabelFor(m => m.Renditja, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Renditja, new { @class = "form-control" })
                              </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        <button class="btn btn-primary" onclick="ruajmenu();">Ruaj</button>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script>
        var ruajparent = function () {
            var createfrom = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', createfrom).val();

            var obj = { __RequestVerificationToken: token };

            $.ajax({
                url: "/SYSMENU/RuajParentin",
                cache: false,
                type: 'POST',
                data: 'json',
                async: false,
                data: {
                    __RequestVerificationToken: token,
                    ID: $("#ID").val(),
                    PershkrimiP: $("#PershkrimiP").val(),
                    HtmlKlasaP: $("#HtmlKlasaP").val(),
                    RoliIDP: $("#RoliIDP").val(),
                    RenditjaP: $("#RenditjaP").val()

                },
                success: function (result) {
                    //MbushListen();
                     window.location.href = '@Url.Action("CreateAsync", "SYSMENU")',true;
                },
                error: function (jqXHR, error, errorThrown) {
                }


            });
        };

        var MbushListen = function () {


            var token = $('input[name="__RequestVerificationToken"]').val();
            var obj = { __RequestVerificationToken: token };
            $.ajax({
                url: '/SYSMENU/LoadParent',
                type: 'POST',
               
                data: obj,
                success: function (rs) {
                    $('#ParentID').find('option').remove();
                    $('#ParentID').append(rs);

                },
                error: function (jqXHR, error, errorThrown) {
                    if (jqXHR.status && jqXHR.status == 400) {
                        console.log(jqXHR.responseText);
                    } else {
                        console.log("Something went wrong");
                    }
                }
            });


        }


        var ruajmenu = function () {
            var createfrom = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', createfrom).val();

            
            $.ajax({
                url: "/SYSMENU/RuajMenu",
                cache: false,
                type: 'POST',
                async: false,
                dataType: 'json',
                data: {
                    __RequestVerificationToken: token,
                    ID: $("#ID").val(),
                    Pershkrimi: $("#Pershkrimi").val(),
                    HtmlClass: $("#HtmlClass").val(),
                    RoleID: $("#RoleID").val(),
                    Controller: $("#Controller").val(),
                    ActionName: $("#ActionName").val(),
                    ParentID: $("#ParentID").val(),
                    Renditja: $("#Renditja").val()

                },
                success: function (result) {
                    window.location.href = '@Url.Action("Index", "SYSMENU")',true;
                },
                error: function (jqXHR, error, errorThrown) {
                }


            });
        };
    </script>

